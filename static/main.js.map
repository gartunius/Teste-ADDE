{"version":3,"sources":["./src/environments/environment.ts","./src/app/climate.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/climate/climate.component.html","./src/app/climate/climate.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClimateService {\n  private subject = new Subject<any>();\n  private days = '3';\n\n  constructor(private http: HttpClient) { }\n\n  getWeatherInfoWithLocation(location: string) {\n    let parameters = new HttpParams();\n    parameters = parameters.set('location', location);\n\n    return this.http.get(`http://localhost:5000/weather`, { params: parameters });\n  }\n\n  getWeatherInfoWithLatLon(latitude: string, longitude: string) {\n    let parameters = new HttpParams();\n    parameters = parameters.set('latitude', latitude);\n    parameters = parameters.set('longitude', longitude);\n\n    return this.http.get(`http://localhost:5000/weather`, { params: parameters });\n  }\n\n  getWeatherForecastWithLocation(location: string) {\n    let parameters = new HttpParams();\n    parameters = parameters.set('location', location);\n    parameters = parameters.set('days', this.days);\n\n    return this.http.get(`http://localhost:5000/weatherForecast`, { params: parameters });\n  }\n\n  getWeatherForecastWithLatLon(latitude: string, longitude: string) {\n    let parameters = new HttpParams();\n    parameters = parameters.set('latitude', latitude);\n    parameters = parameters.set('longitude', longitude);\n    parameters = parameters.set('days', this.days);\n\n    return this.http.get(`http://localhost:5000/weatherForecast`, { params: parameters });\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<app-climate></app-climate>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ClimateComponent } from './climate/climate.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClimateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"climate\">\n    <h1 class=\"container\">Weather Check</h1>\n    <h2 class=\"container\">{{ currentLocation }} today</h2>\n\n    <div class=\"container\">\n        <img class=\"weather_icon\" src=\"https://www.weatherbit.io/static/img/icons/{{currentIcon}}.png\" alt=\"\">\n    </div>\n\n    <table>\n        <tr>\n            <th class=\"property\">Temperature: </th>\n            <td class=\"property_value\">{{ currentTemp }} °C</td>\n        </tr>\n        <tr>\n            <th class=\"property\">Apparent Temperature: </th>\n            <td class=\"property_value\">{{ currentAppTem }} °C</td>\n        </tr>\n        <tr>\n            <th class=\"property\">Precipitation Rate: </th>\n            <td class=\"property_value\">{{ currentPrecip }} mm/hr</td>\n        </tr>\n        <tr>\n            <th class=\"property\">Snowfall: </th>\n            <td class=\"property_value\">{{ currentSnow }} mm/hr</td>\n        </tr>\n        <tr>\n            <th class=\"property\">Weather: </th>\n            <td class=\"property_value\">{{ currentWeatherDescription }}</td>\n        </tr>\n    </table>\n\n    <input id=\"location\" [(ngModel)]=\"currentLocation\" type=\"text\">\n\n    <div class=\"container\">\n        <button class=\"send_location\" (click)=\"checkWeather()\">Send location</button>\n    </div>\n        <table *ngFor=\"let day of days\">\n            <tr>\n                <th class=\"property\">Day: </th>\n                <td class=\"property_value\">{{ day.date }}</td>\n            </tr>\n            <tr>\n                <th class=\"property\">Temperature: </th>\n                <td class=\"property_value\">{{ day.temperature }} °C</td>\n            </tr>\n            <tr>\n                <th class=\"property\">Weather: </th>\n                <td class=\"property_value\">{{ day.weather }}</td>\n            </tr>\n        </table>\n    <div>\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClimateService } from '../climate.service';\nimport { WeatherDay } from '../weather-day';\n\n@Component({\n    selector: 'app-climate',\n    templateUrl: './climate.component.html',\n    styleUrls: ['./climate.component.css']\n})\nexport class ClimateComponent implements OnInit {\n    private iconUrl = \"https://www.weatherbit.io/static/img/icons/\";\n\n    currentLocation: string = 'campinas';\n    currentTemp: string;\n    currentAppTem: string;\n    currentPrecip: string;\n    currentSnow: string;\n    currentWeatherDescription: string;\n    currentIcon: string;\n\n    days: WeatherDay[];\n\n    constructor(private climateService: ClimateService) { }\n\n    ngOnInit(): void {\n        navigator.geolocation.getCurrentPosition((position) => {\n            var latitude = String(position.coords.latitude);\n            var longitude = String(position.coords.longitude);\n\n            this.climateService.getWeatherInfoWithLatLon(latitude, longitude).toPromise().then(data => {\n                var jsonContent = data['data'][0];\n                this.setData(jsonContent);\n            });\n\n            this.climateService.getWeatherForecastWithLatLon(latitude, longitude).toPromise().then(data => {\n                var days: WeatherDay[] = [];\n\n                for (let key in data['data']) {\n                    var day = data['data'][key];\n\n                    var datetime = data['data'][key]['datetime'];\n                    var temperature = data['data'][key]['temp'];\n                    var weather = data['data'][key]['weather']['description'];\n\n                    days.push(<WeatherDay> {\n                        temperature: temperature,\n                        weather: weather,\n                        date: datetime,\n                    })\n                }\n\n                this.setDays(days);\n            })\n        })\n    }\n\n    checkWeather(): void {\n        this.climateService.getWeatherInfoWithLocation(this.currentLocation).toPromise().then(data => {\n            var jsonContent = data['data'][0];\n            this.setData(jsonContent);\n        });\n\n        this.climateService.getWeatherForecastWithLocation(this.currentLocation).toPromise().then(data => {\n            var days: WeatherDay[] = [];\n\n            for (let key in data['data']) {\n                var day = data['data'][key];\n\n                var datetime = data['data'][key]['datetime'];\n                var temperature = data['data'][key]['temp'];\n                var weather = data['data'][key]['weather']['description'];\n\n                days.push(<WeatherDay> {\n                    temperature: temperature,\n                    weather: weather,\n                    date: datetime,\n                })\n            }\n\n            this.setDays(days);\n        })\n    }\n\n    private setData(jsonContent): void {\n        this.currentLocation = String(jsonContent['city_name'])\n        this.currentTemp = String(jsonContent['temp'])\n        this.currentAppTem = String(jsonContent['app_temp'])\n        this.currentPrecip = String(jsonContent['precip'])\n        this.currentSnow = String(jsonContent['snow'])\n        this.currentWeatherDescription = String(jsonContent['weather']['description'])\n        this.currentIcon = String(jsonContent['weather']['icon'])\n    }\n\n    private setDays(days): void {\n        this.days = days;\n    }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}